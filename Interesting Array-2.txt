import java.io.*;
import java.util.*;
 
class Main {
      static int BS(int[] arr, int X, int low)  {
        int high = arr.length - 1;
        int ans = arr.length;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(arr[mid] >= X) {
                ans = mid;
                high = mid - 1;
            }
            else low = mid + 1;
        }
        return ans;
    }
      static int countPairsWithDiffK(int[] arr, int N, int k) {
        int count = 0;
        Arrays.sort(arr);
        for(int i = 0 ; i < N ; ++i) {
            int X = BS(arr, arr[i] + k, i + 1);
            //System.out.println("x= "+X);
            if(X != N) {
                int Y = BS(arr, arr[i] + k + 1, i + 1);
                //System.out.println("Y= "+Y);
                count += Y - X;
                //System.out.println("count= "+count);
            }
        }
 
        return count;
    }
    public static void main (String[] args) {
      Scanner sc=new Scanner(System.in);
      int n=sc.nextInt();
      int k=sc.nextInt();
      int []arr=new int[n];
      int count=0;
      for(int i=0;i<n;i++)
      {
        arr[i]=sc.nextInt();
      }
        System.out.println(countPairsWithDiffK(arr, n, k)); 
        }
}