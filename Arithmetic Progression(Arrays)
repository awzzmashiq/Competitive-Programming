Arithmetic Progression
You are given an integer sequence 
a
1
, 
a
2
,..., 
a
n
 of length 
n
. You have to analyze the sequence. The task is to find all values of 
x
, for which these two conditions hold.
1. 
x
 occurs in sequence 
a
.
2. Consider all positions of numbers 
x
 in the sequence 
a
 (such 
i
, that 
a
i
 = 
x
). These numbers, sorted in the increasing order, must form an arithmetic progression. 

Find all 
x
 that meets the problem conditions.

Input format
The first line contains integer 
n
.
The next line contains integers  
a
1
, 
a
2
, ..., 
a
n
 separated by space.

Output format
In the first line print integer 
M
 — the number of valid 
x
. On each of the next 
M
 lines print two integers 
x
 and 
p
x
, where 
x
 is current suitable value, 
p
x
 is the common difference between numbers in the progression (if 
x
 occurs exactly once in the sequence, 
p
x
 must equal 0). Print the pairs in the order of increasing 
x
.

Constraints
1
 ≤ 
n
 ≤ 
10
5

1
 ≤ 
a
i
 ≤ 
10
5

Time Limit
1 second

Examples
Input1
1
3

Output1
1
3 0

Input2
8
4 2 4 3 4 2 4 5

Output2
4
2 4
3 0
4 2
5 0

Explanation
Example 
1
: there is only one number 
3
, that's why the common difference is 
0
.

Example 
2
: you can see here the index of each number.
2
:  
[
1
, 
5
]
, number 
2
 is present at index 
1
 and 
5
 and common difference is 
5
−
1
=
4
.
3
:  
[
3
]
, 
3
 is only present at index 
3
,that's why common difference is 
0
. 
4
:  
[
0
, 
2
, 
4
, 
6
]
, number 
4
 is present at index 
0
, 
2
, 
4
 and 
6
. According to A.P common difference is same and defference is 
2
. 
5
:  
[
7
]
, 
5
 is only present at index 
7
,that's why common difference is 
0
.

Total numbers are fulfilled the condition is 
4
.


solution

import java.util.*;
  import java.io.*;
  
  public class Main {
    public static void main(String args[]) throws IOException {
      
      Scanner sc=new Scanner(System.in);
      int n=sc.nextInt();
      int []a=new int[n];
      int f1[]=new int[100001];
      boolean f2[]=new boolean[100001];
      int f3[]=new int[100001];
      int count=0;
      Arrays.fill(f1,0);
      Arrays.fill(f2,false);
      Arrays.fill(f3,0);
      
      for(int i=0;i<n;i++)
      {
        a[i]=sc.nextInt();
        if(f1[a[i]]==0 && f3[a[i]]==0)
        {
          f2[a[i]]=true;
          if(a[0]==a[i]){
           f1[a[i]]=i-f3[a[i]];   
          }
        }
        else{
        if(f1[a[i]]==0)
        {
          f1[a[i]]=i-f3[a[i]];
          //f2[a[i]]=true;
        }
        else if(f1[a[i]]>0 && i-f3[a[i]]!=f1[a[i]])
        {
          f2[a[i]]=false;
        } 
        }
        
      f3[a[i]]=i;
        
      }
      for(int i=0;i<100001;i++)
      {
        if(f2[i]==true)
         ++count;
      }
      System.out.println(count);
      /*for(int i=0;i<n;i++)
       System.out.print(f1[a[i]]+" ");
      System.out.print('\n'); */
      for(int i=0;i<100001;i++)
      {
        if(f2[i]==true)
        {
          //System.out.println(i);
          System.out.println(i+ " "+f1[i]);
        }
      }
    }
  }